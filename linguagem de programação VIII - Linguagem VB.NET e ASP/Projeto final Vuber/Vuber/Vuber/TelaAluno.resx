<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>